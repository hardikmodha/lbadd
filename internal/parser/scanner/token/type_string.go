// Code generated by "stringer -type=Type"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[Error-1]
	_ = x[EOF-2]
	_ = x[StatementSeparator-3]
	_ = x[KeywordAbort-4]
	_ = x[KeywordAction-5]
	_ = x[KeywordAdd-6]
	_ = x[KeywordAfter-7]
	_ = x[KeywordAll-8]
	_ = x[KeywordAlter-9]
	_ = x[KeywordAnalyze-10]
	_ = x[KeywordAnd-11]
	_ = x[KeywordAs-12]
	_ = x[KeywordAsc-13]
	_ = x[KeywordAttach-14]
	_ = x[KeywordAutoincrement-15]
	_ = x[KeywordBefore-16]
	_ = x[KeywordBegin-17]
	_ = x[KeywordBetween-18]
	_ = x[KeywordBy-19]
	_ = x[KeywordCascade-20]
	_ = x[KeywordCase-21]
	_ = x[KeywordCast-22]
	_ = x[KeywordCheck-23]
	_ = x[KeywordCollate-24]
	_ = x[KeywordColumn-25]
	_ = x[KeywordCommit-26]
	_ = x[KeywordConflict-27]
	_ = x[KeywordConstraint-28]
	_ = x[KeywordCreate-29]
	_ = x[KeywordCross-30]
	_ = x[KeywordCurrent-31]
	_ = x[KeywordCurrentDate-32]
	_ = x[KeywordCurrentTime-33]
	_ = x[KeywordCurrentTimestamp-34]
	_ = x[KeywordDatabase-35]
	_ = x[KeywordDefault-36]
	_ = x[KeywordDeferrable-37]
	_ = x[KeywordDeferred-38]
	_ = x[KeywordDelete-39]
	_ = x[KeywordDesc-40]
	_ = x[KeywordDetach-41]
	_ = x[KeywordDistinct-42]
	_ = x[KeywordDo-43]
	_ = x[KeywordDrop-44]
	_ = x[KeywordEach-45]
	_ = x[KeywordElse-46]
	_ = x[KeywordEnd-47]
	_ = x[KeywordEscape-48]
	_ = x[KeywordExcept-49]
	_ = x[KeywordExclude-50]
	_ = x[KeywordExclusive-51]
	_ = x[KeywordExists-52]
	_ = x[KeywordExplain-53]
	_ = x[KeywordFail-54]
	_ = x[KeywordFilter-55]
	_ = x[KeywordFirst-56]
	_ = x[KeywordFollowing-57]
	_ = x[KeywordFor-58]
	_ = x[KeywordForeign-59]
	_ = x[KeywordFrom-60]
	_ = x[KeywordFull-61]
	_ = x[KeywordGenerated-62]
	_ = x[KeywordGlob-63]
	_ = x[KeywordGroup-64]
	_ = x[KeywordGroups-65]
	_ = x[KeywordHaving-66]
	_ = x[KeywordIf-67]
	_ = x[KeywordIgnore-68]
	_ = x[KeywordImmediate-69]
	_ = x[KeywordIn-70]
	_ = x[KeywordIndex-71]
	_ = x[KeywordIndexed-72]
	_ = x[KeywordInitially-73]
	_ = x[KeywordInner-74]
	_ = x[KeywordInsert-75]
	_ = x[KeywordInstead-76]
	_ = x[KeywordIntersect-77]
	_ = x[KeywordInto-78]
	_ = x[KeywordIs-79]
	_ = x[KeywordIsnull-80]
	_ = x[KeywordJoin-81]
	_ = x[KeywordKey-82]
	_ = x[KeywordLast-83]
	_ = x[KeywordLeft-84]
	_ = x[KeywordLike-85]
	_ = x[KeywordLimit-86]
	_ = x[KeywordMatch-87]
	_ = x[KeywordNatural-88]
	_ = x[KeywordNo-89]
	_ = x[KeywordNot-90]
	_ = x[KeywordNothing-91]
	_ = x[KeywordNotnull-92]
	_ = x[KeywordNull-93]
	_ = x[KeywordNulls-94]
	_ = x[KeywordOf-95]
	_ = x[KeywordOffset-96]
	_ = x[KeywordOn-97]
	_ = x[KeywordOr-98]
	_ = x[KeywordOrder-99]
	_ = x[KeywordOthers-100]
	_ = x[KeywordOuter-101]
	_ = x[KeywordOver-102]
	_ = x[KeywordPartition-103]
	_ = x[KeywordPlan-104]
	_ = x[KeywordPragma-105]
	_ = x[KeywordPreceding-106]
	_ = x[KeywordPrimary-107]
	_ = x[KeywordQuery-108]
	_ = x[KeywordRaise-109]
	_ = x[KeywordRange-110]
	_ = x[KeywordRecursive-111]
	_ = x[KeywordReferences-112]
	_ = x[KeywordRegexp-113]
	_ = x[KeywordReindex-114]
	_ = x[KeywordRelease-115]
	_ = x[KeywordRename-116]
	_ = x[KeywordReplace-117]
	_ = x[KeywordRestrict-118]
	_ = x[KeywordRight-119]
	_ = x[KeywordRollback-120]
	_ = x[KeywordRow-121]
	_ = x[KeywordRows-122]
	_ = x[KeywordSavepoint-123]
	_ = x[KeywordSelect-124]
	_ = x[KeywordSet-125]
	_ = x[KeywordTable-126]
	_ = x[KeywordTemp-127]
	_ = x[KeywordTemporary-128]
	_ = x[KeywordThen-129]
	_ = x[KeywordTies-130]
	_ = x[KeywordTo-131]
	_ = x[KeywordTransaction-132]
	_ = x[KeywordTrigger-133]
	_ = x[KeywordUnbounded-134]
	_ = x[KeywordUnion-135]
	_ = x[KeywordUnique-136]
	_ = x[KeywordUpdate-137]
	_ = x[KeywordUsing-138]
	_ = x[KeywordVacuum-139]
	_ = x[KeywordValues-140]
	_ = x[KeywordView-141]
	_ = x[KeywordVirtual-142]
	_ = x[KeywordWhen-143]
	_ = x[KeywordWhere-144]
	_ = x[KeywordWindow-145]
	_ = x[KeywordWith-146]
	_ = x[KeywordWithout-147]
	_ = x[Literal-148]
	_ = x[UnaryOperator-149]
	_ = x[BinaryOperator-150]
	_ = x[Delimiter-151]
}

const _Type_name = "UnknownErrorEOFStatementSeparatorKeywordAbortKeywordActionKeywordAddKeywordAfterKeywordAllKeywordAlterKeywordAnalyzeKeywordAndKeywordAsKeywordAscKeywordAttachKeywordAutoincrementKeywordBeforeKeywordBeginKeywordBetweenKeywordByKeywordCascadeKeywordCaseKeywordCastKeywordCheckKeywordCollateKeywordColumnKeywordCommitKeywordConflictKeywordConstraintKeywordCreateKeywordCrossKeywordCurrentKeywordCurrentDateKeywordCurrentTimeKeywordCurrentTimestampKeywordDatabaseKeywordDefaultKeywordDeferrableKeywordDeferredKeywordDeleteKeywordDescKeywordDetachKeywordDistinctKeywordDoKeywordDropKeywordEachKeywordElseKeywordEndKeywordEscapeKeywordExceptKeywordExcludeKeywordExclusiveKeywordExistsKeywordExplainKeywordFailKeywordFilterKeywordFirstKeywordFollowingKeywordForKeywordForeignKeywordFromKeywordFullKeywordGeneratedKeywordGlobKeywordGroupKeywordGroupsKeywordHavingKeywordIfKeywordIgnoreKeywordImmediateKeywordInKeywordIndexKeywordIndexedKeywordInitiallyKeywordInnerKeywordInsertKeywordInsteadKeywordIntersectKeywordIntoKeywordIsKeywordIsnullKeywordJoinKeywordKeyKeywordLastKeywordLeftKeywordLikeKeywordLimitKeywordMatchKeywordNaturalKeywordNoKeywordNotKeywordNothingKeywordNotnullKeywordNullKeywordNullsKeywordOfKeywordOffsetKeywordOnKeywordOrKeywordOrderKeywordOthersKeywordOuterKeywordOverKeywordPartitionKeywordPlanKeywordPragmaKeywordPrecedingKeywordPrimaryKeywordQueryKeywordRaiseKeywordRangeKeywordRecursiveKeywordReferencesKeywordRegexpKeywordReindexKeywordReleaseKeywordRenameKeywordReplaceKeywordRestrictKeywordRightKeywordRollbackKeywordRowKeywordRowsKeywordSavepointKeywordSelectKeywordSetKeywordTableKeywordTempKeywordTemporaryKeywordThenKeywordTiesKeywordToKeywordTransactionKeywordTriggerKeywordUnboundedKeywordUnionKeywordUniqueKeywordUpdateKeywordUsingKeywordVacuumKeywordValuesKeywordViewKeywordVirtualKeywordWhenKeywordWhereKeywordWindowKeywordWithKeywordWithoutLiteralUnaryOperatorBinaryOperatorDelimiter"

var _Type_index = [...]uint16{0, 7, 12, 15, 33, 45, 58, 68, 80, 90, 102, 116, 126, 135, 145, 158, 178, 191, 203, 217, 226, 240, 251, 262, 274, 288, 301, 314, 329, 346, 359, 371, 385, 403, 421, 444, 459, 473, 490, 505, 518, 529, 542, 557, 566, 577, 588, 599, 609, 622, 635, 649, 665, 678, 692, 703, 716, 728, 744, 754, 768, 779, 790, 806, 817, 829, 842, 855, 864, 877, 893, 902, 914, 928, 944, 956, 969, 983, 999, 1010, 1019, 1032, 1043, 1053, 1064, 1075, 1086, 1098, 1110, 1124, 1133, 1143, 1157, 1171, 1182, 1194, 1203, 1216, 1225, 1234, 1246, 1259, 1271, 1282, 1298, 1309, 1322, 1338, 1352, 1364, 1376, 1388, 1404, 1421, 1434, 1448, 1462, 1475, 1489, 1504, 1516, 1531, 1541, 1552, 1568, 1581, 1591, 1603, 1614, 1630, 1641, 1652, 1661, 1679, 1693, 1709, 1721, 1734, 1747, 1759, 1772, 1785, 1796, 1810, 1821, 1833, 1846, 1857, 1871, 1878, 1891, 1905, 1914}

func (i Type) String() string {
	if i >= Type(len(_Type_index)-1) {
		return "Type(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Type_name[_Type_index[i]:_Type_index[i+1]]
}
